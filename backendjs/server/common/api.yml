openapi: 3.0.1
info:
  title: backendjs
  description: Limber backend
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Specification
  description: The swagger API specification
paths:
  /auth:
    get:
      security:
        - BearerAuth: []
      tags:
        - Authentication
      description: Test Authentication
      responses:
        200:
          description: Authenticated
          content: {}
        401:
          description: Unauthenticated
          content: {}
  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
  /group/{id}:
    put:
      tags:
      - Group
      description: Update a group
      parameters:
      - name: id
        in: path
        description: The id of the group to query
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGroup"
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully queried the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Group Name
                      description:
                        type: string
                        example: Group description
                      tags:
                        type: array
                        items:
                          type: string
                        example: ["tag1", "tag2"]
                      owner:
                        type: string
                        example: "auth0|..."
                      image:
                        type: string
                      members:
                        type: array
                        items:
                          type: integer
                        example: [1]
        401:
          description: Unauthenticated or invalid user token
          content: {}
        403:
          description: Permission denied
          content: {}
        400:
          description: Bad request upon invalid group
          content: {}
    get:
      tags:
      - Group
      description: Get details of a group
      security:
        - BearerAuth: []
      parameters:
      - name: id
        in: path
        description: The id of the group to query
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully queried the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Group Name"
                      description:
                        type: string
                        example: "Group description"
                      tags:
                        type: array
                        example: ["tag1", "tag2"]
                        items:
                          type: string
                      owner:
                        type: string
                        example: "auth0|..."
                      image:
                        type: string
                      participating:
                        type: boolean
                        example: true
        400:
          description: "Bad request upon invalid group"
          content: {}

        401:
          description: Unauthenticated or invalid Access Token
          content: {}
        403:
          description: Permission denied
          content: {}
  /group/invite/{id}:
    post:
      tags:
        - Group
        - Invite
      description: Invite a user to a group (in development)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: The group id to invite to
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupInviteRequest"
      responses:
        200:
          description: Successfully invited user
          content: {}
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
        403:
          description: Permission denied
          content: {}
  /group/join/{id}:
    post:
      tags:
        - Group
        - Join
      description: Request to join a group
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: The group id to join
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully requested to join group
          content: {}
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
        403:
          description: Permission denied
          content: {}
  /group:
    get:
      tags:
        - Group
      description: Get a list of groups
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully Retrieved
                  data:
                    type: object
                    properties:
                      groups:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 1
                            name:
                              type: string
                              example: Group Name
                            participating:
                              type: boolean
                              example: true
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
    post:
      tags:
      - Group
      description: Create a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGroup"
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully made the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully Created"
                  data:
                    type: object
                    example: {
                      id: 1,
                      name: "New Group",
                      description: "Description of the new group",
                      tags: ["tag1", "tag2"],
                      image: "www.imagehost.com/thing.png",
                      owner: "auth0|..."
                    }
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
  /event:
    post:
      tags:
      - Event
      description: Create an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEvent"
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully created the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Event Name
                      description:
                        type: string
                        example: Event description
                      next:
                        type: integer
                        example: 1
                      datetime:
                        type: string
                        format: date-time
                      length:
                        type: integer
                        example: 3600
                      tags:
                        type: array
                        example: ["tag1", "tag2"]
                        items:
                          type: string
                      image:
                        type: string
                      group_owner:
                        type: integer
        401:
          description: Unauthenticated or invalid user token
          content: {}
        403:
          description: Permission denied
          content: {}
    get:
      tags:
        - Event
      description: Get a list of events
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully Retrieved
                  data:
                    type: object
                    properties:
                      groups:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 1
                            name:
                              type: string
                              example: Event Name
                            participating:
                              type: boolean
                              example: true
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
  /event/{id}:
    put:
      tags:
      - Event
      description: Update a event
      parameters:
      - name: id
        in: path
        description: The id of the group to query
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEvent"
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully queried the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Event Name
                      description:
                        type: string
                        example: Event description
                      next:
                        type: integer
                        example: 1
                      datetime:
                        type: string
                        format: date-time
                      length:
                        type: integer
                        example: 3600
                      tags:
                        type: array
                        example: ["tag1", "tag2"]
                        items:
                          type: string
                      image:
                        type: string
                      members:
                        type: array
                        items:
                          type: integer
                        example: [1]
                      group_owner:
                        type: integer
        401:
          description: Unauthenticated or invalid user token
          content: {}
        403:
          description: Permission denied
          content: {}
        400:
          description: Bad request upon invalid event
          content: {}
    get:
      tags:
      - Event
      description: Get details of a event
      security:
        - BearerAuth: []
      parameters:
      - name: id
        in: path
        description: The id of the event to query
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully queried the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Event Name"
                      description:
                        type: string
                        example: "Event description"
                      tags:
                        type: array
                        example: ["tag1", "tag2"]
                        items:
                          type: string
                      owner:
                        type: string
                        example: "auth0|..."
                      next:
                        type: integer
                        example: 1
                      datetime:
                        type: string
                        format: date-time
                      length:
                        type: integer
                        example: 3600
                      image:
                        type: string
                      group_owner:
                        type: integer
                      participating:
                        type: boolean
                        example: true
        400:
          description: "Bad request upon invalid event"
          content: {}
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
        403:
          description: Permission denied
          content: {}
  /event/join/{id}:
    post:
      tags:
        - Event
        - Join
      description: Invite a user to a event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: The event id to join
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully joined event
          content: {}
        401:
          description: Unauthenticated or invalid Access Token
          content: {}
        403:
          description: Permission denied
          content: {}
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    PermissionDenied:
      title: User has insufficient permissions
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Permission Denied"
        data:
          type: object
          example: null
    CreateGroup:
      title: Create a group
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: "New Group"
        description:
          type: string
          example: "Description of the new group"
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]
        image:
          type: string
    UpdateGroup:
      title: Update a group
      type: object
      properties:
        name:
          type: string
          example: "Updated Group"
        description:
          type: string
          example: "Description of the updated group"
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]
        image:
          type: string
    GroupInviteRequest:
      title: Group Invite Request
      type: object
      properties:
        uid:
          type: string
          description: The id of the user to invite
    UpdateEvent:
      title: Update an event
      type: object
      properties:
        name:
          type: string
          example: Event Name
        description:
          type: string
          example: Event description
        next:
          type: integer
          example: 1
        datetime:
          type: string
          format: date-time
        length:
          type: integer
          example: 3600
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]
        image:
          type: string
        group_owner:
          type: integer
    CreateEvent:
      title: Create an event
      type: object
      properties:
        name:
          type: string
          example: Event Name
        description:
          type: string
          example: Event description
        next:
          type: integer
          example: 1
        datetime:
          type: string
          format: date-time
        length:
          type: integer
          example: 3600
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]
        image:
          type: string
        group_owner:
          type: integer
