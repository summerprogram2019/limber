openapi: 3.0.1
info:
  title: backendjs
  description: Limber backend
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Examples
  description: Simple example endpoints
- name: Specification
  description: The swagger API specification
paths:
  /auth:
    get:
      parameters:
      - name: Authorization
        in: header
        description: The authorization token for auth0
        required: true
        schema:
          type: string
      tags:
        - Authentication
      description: Test Authentication
      responses:
        200:
          description: Authenticated
          content: {}
        401:
          description: Unauthenticated
          content: {}
  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
  /group:
    get:
      tags:
      - Group
      parameters:
      - name: id
        in: query
        description: The id of the group to query
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully queried the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    example: {
                      id: 1,
                      name: "Group name",
                      description: "Group description",
                      tags: ["tag1", "tag2"],
                      owner: "auth0|..."
                    }
        401:
          description: Unauthenticated or invalid user token
          content:
            application/json:
                schema:
                  $ref: '#/definitions/Unauthenticated'
        403:
          description: Permission denied
          content:
            application/json:
                schema:
                  $ref: '#/definitions/PermissionDenied'
    post:
      tags:
      - Group
      parameters:
      - name: name
        in: query
        description: The name of the group to create
        required: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the group to create
        required: true
        schema:
          type: string
      - name: tags
        in: query
        description: The tags of the group to create
        required: true
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: The authorization token for auth0
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully made the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  data:
                    type: object
                    example: {
                      id: 1,
                      name: "Group name",
                      description: "Group description",
                      tags: ["tag1", "tag2"],
                      owner: "auth0|..."
                    }
        401:
          description: Unauthenticated or invalid user token
          content:
            application/json:
                schema:
                  $ref: '#/definitions/Unauthenticated'
        403:
          description: Permission denied
          content:
            application/json:
                schema:
                  $ref: '#/definitions/PermissionDenied'
components:
  schemas:
    ExampleBody:
      title: example
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
    Unauthenticated:
      title: Unauthenticated response
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Failed to Authenticate"
        data:
          type: object
          example: null
    PermissionDenied:
      title: User has insufficient permissions
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Permission Denied"
        data:
          type: object
          example: null
